assume cs:code
stack segment
	db 128 dup(0)
stack ends

data segment
	dw 2 dup(0)
data ends

code segment
start:
	mov ax,stack
	mov ss,ax
	mov sp,128

	mov ax,data
	mov ds,ax

	mov ax,0
	mov es,ax

	push es:[9*4]
	pop ds:[0]
	push es:[9*4+2]
	pop ds:[2]

	cli
	mov word ptr es:[9*4],offset int9 
	mov word ptr es:[9*4+2],cs
	sti
	
	call Delay
	
	cli
	push ds:[0]
	pop es:[9*4]
	push ds:[2]
	pop es:[9*4+2]
	sti

	mov ax,4c00H
	int 21H

Delay:
	push bx
	push ax
	
	mov bx,0f00H
	mov ax,0
S1:
	sub ax,1
	sbb bx,0
	cmp ax,0
	jne S1
	cmp bx,0
	jne S1

	push ax
	push bx
	ret 

int9:
	push ax
	push bx
	push cx
	push dx
	push es

	in al,60H
	pushf
	call dword ptr ds:[0]
	
	cmp al,9eH
	jne end9

	mov cx,1000
	mov bx,0b800H
	mov es,bx
	mov dx,0
	mov bx,0
S:
	mov byte ptr es:[bx],'A'
	cmp dl,11111111B
	jne next
	mov dl,0
next:
	mov byte ptr es:[bx+1],dl
	add bx,2
	inc dl
	loop S

end9:
	pop es
	pop dx
	pop cx
	pop bx
	pop ax
	iret

code ends
end start
