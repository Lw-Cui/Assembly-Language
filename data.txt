assume cs:code

data segment
	db '1975','1976','1977','1978','1979','1980','1981','1982','1983','1984','1985','1986','1987','1988','1989','1990','1991','1992','1993','1994','1995'  
	dd 16,22,382,1356,2390,8000,16000,24486,50065,97479,140417,197514,345980,590827,803530,1183000,1843000,2759000,3753000,4649000,5937000 
	dw 3,7,9,13,28,38,130,220,476,778,1001,1442,2258,2793,4037,5635,8226  ,11542,14430,15257,17800 
data ends

stack segment
	dw 32 dup(0)
stack ends

disp segment
	db 20 dup(0)
disp ends

code segment
start:
	mov ax,data
	mov ds,ax
	mov ax,disp
	mov es,ax
	mov ax,stack
	mov ss,ax
	mov sp,64

	mov cx,21
	mov si,0
	mov bx,84
	mov bp,168
	mov dh,0
S:
	push cx
	push dx
	mov ax,[bx][si].0
	mov dx,[bx][si].2
	add si,4
	call dtoc

	pop dx
	inc dh
	mov dl,13
	mov cl,2
	call show_str

	pop cx
	loop S

	mov dh,0
	mov si,0
	mov cx,21
S1:
	push cx
	push dx
	mov ax,ds:[bp][si].0
	add si,2
	mov dx,0
	call dtoc

	pop dx
	inc dh
	mov dl,23
	mov cl,2
	call show_str
	pop cx
	loop S1

	mov dh,0
	mov si,0
	mov cx,21
S2:
	push cx
	push dx
	mov di,si
	add di,di
	mov ax,[bx][di].0
	mov dx,[bx][di].2
	mov cx,ds:[bp][si]
	add si,2
	call divdw
	call dtoc

	pop dx
	inc dh
	mov dl,33
	mov cl,2
	call show_str

	pop cx
	loop S2
	
	mov bx,0
	mov si,0
	mov dh,0
	mov cx,21
S3:
	push cx
	mov ax,[bx][si].0
	mov es:[bx].0,ax
	mov ax,[bx][si].2
	mov es:[bx].2,ax
	mov ax,0
	mov es:[bx].4,ax
	
	add si,4
	inc dh
	mov dl,3
	mov cl,2
	call show_str
	pop cx
	loop S3

	mov ax,4c00H
	int 21H

;dx * FFFF + ax -> es:0...0 (decimal)
dtoc:
	push di
	push dx
	push cx
	push ax
	mov di,0
S1_dtoc:
	mov cx,10
	call divdw
	push cx
	inc di
	mov cx,ax
	jcxz OK_dtoc
	jmp short S1_dtoc
OK_dtoc:
	mov cx,dx
	jcxz END_dtoc
	jmp short S1_dtoc
END_dtoc:
	mov cx,di
	mov di,0
S2_dtoc:
	pop dx
	add dl,30H
	mov es:[di],dl
	inc di
	loop S2_dtoc
	
	mov al,0
	mov es:[di],al
		
	pop di
	pop dx
	pop cx
	pop ax
	ret
	
;dx * ffff + ax / cx = dx * FFFF + ax ... cx
divdw:
	push si
	push di

	mov si,ax
	mov ax,dx
	mov dx,0
	div cx
	mov di,ax
	mov ax,si
	div cx
	mov cx,dx
	mov dx,di

	pop di
	pop si
	ret

;col: dl  row: dh  color: cl  content: es:0... 0
show_str:
	push ax
	push bx
	push cx
	push dx
	push si
	push di
	push ds

	mov ax,160
	dec dh
	mul dh
	mov bx,ax

	mov ax,2
	dec dl
	mul dl
	mov di,ax

	mov ax,0B800H
	mov ds,ax
	mov si,0
	mov al,cl
	mov cx,0
S_show:
	mov cl,es:[si]
	jcxz OK_show
	mov [bx][di].0,cl
	mov [bx][di].1,al
	add di,2
	inc si
	jmp short S_show
OK_show:
	pop ds
	pop di
	pop si
	pop dx
	pop cx
	pop bx
	pop ax
	ret

code ends
end start

